/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.9/userguide/tutorial_java_projects.html
 */

buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

//spring plugins
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

//ide
apply plugin: "idea"

//docker
apply plugin: 'docker'

group = 'am.neovision.admin.toolkit'
version = '0.1.0-SNAPSHOT'

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}

// Define the main class for the application
mainClassName = 'am.neovision.admin.toolkit.App'

bootJar {
    baseName = 'bank_transaction'
    version = '0.1.0'
}

repositories {
    mavenCentral()
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('mysql:mysql-connector-java')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework:spring-context-support')
    compile('com.google.guava:guava:19.0')
    compile('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')
    compile('org.apache.commons:commons-lang3')
    compile('org.ocpsoft.prettytime:prettytime:4.0.5.Final')
    compile('org.hibernate:hibernate-validator:6.0.10.Final')
    compile('com.fasterxml.jackson.core:jackson-databind:2.11.0')

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    compile('com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.2')
//    compile('org.webjars:bootstrap:4.0.0')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}
